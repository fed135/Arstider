<project name="Arstider" basedir=".">
	
	<property environment="env."/>
	
	<property name="src" location="src"/>
	<property name="tools" location="tools"/>
	<property name="dest" location="${env.BUILD_DEST}/sdk"/>
	
	<property name="jsdoc.home" location="tools/jsdoc"/>
	<property name="jsdoc3-task-jar" value="${jsdoc.home}/jsdoc3-ant-task-1.0.jar"/>
	<property name="rhino-jar" value="${jsdoc.home}/rhino/js.jar"/>
		
	<taskdef name="jsdoc3" classname="net.jannon.ant.tasks.JsDoc3" classpath="${jsdoc3-task-jar}:${rhino-jar}"/>
	
	<target name="build.all" description="Builds the debug, minified and turbo releases">
		<filter filtersfile="version.properties"/>
		
		<echo># Preparing files...</echo>
		
		<concat destfile="${dest}/_temp.js" fixlastline="true" ignoreempty="true">
			<fileset dir="${src}/sdk" includes="**/*.js" />
		</concat>
		
		<echo># Checking network...</echo>
		<exec executable="python" failonerror="false" outputproperty="network">
			<arg line="./tools/ping.py" />
		</exec>
		<echo> : ${network}</echo>
		
		<echo># Building debug release (${dest}/sdk/Arstider.js)</echo>
		
		<filter token="target" value="dev"/>
		<filter token="debug" value="true"/>
		
		<copy toFile="${dest}/Arstider.js" file="${dest}/_temp.js" filtering="true" />
		
		<echo># Building minified release (${dest}/sdk/Arstider.min.js)</echo>
						
		<filter token="target" value="min"/>
		<filter token="debug" value="false"/>
						
		<copy toFile="${dest}/_temp.parsed.js" file="${dest}/_temp.js" filtering="true" />
		
		<antcall target="-build.minify.${network}">
			<param name="target" value="min"/>
		    <param name="compiler.level" value="SIMPLE_OPTIMIZATIONS"/>
		</antcall>
		
		<echo># Building turbo release (${dest}/sdk/Arstider.turbo.js)</echo>
							
		<filter token="target" value="turbo"/>
		<filter token="debug" value="false"/>
							
		<copy toFile="${dest}/_temp.parsed.js" file="${dest}/_temp.js" filtering="true" />
		
		<antcall target="-build.minify.${network}">
			<param name="target" value="turbo"/>
		    <param name="compiler.level" value="ADVANCED_OPTIMIZATIONS"/>
		</antcall>
			
		<delete file="${dest}/_temp.js" />
		<echo># Build completed</echo>
	</target>
	
	<target name="-build.minify.offline">
		<echo>ERROR: Offline compiling not available. </echo>
	</target>
	
	<target name="-build.minify.online">
		<echo> - running compile request...</echo>
		<exec executable="python" failonerror="true">
			<arg line="./tools/closureMinifier.py ${dest}/_temp.parsed.js ${dest}/Arstider.${target}.js ${compiler.level}" />
		</exec>
		
		<delete file="${dest}/_temp.parsed.js" />
		<echo> - done</echo>
	</target>
	
	<target name="build.documentation" description="documentation builder">
		
		<echo> - cleaning doc folder</echo>
		<delete dir="${dest}/Arstider-Documentation"/>
		<mkdir dir="${dest}/Arstider-Documentation" />
		
		<filter filtersfile="version.properties"/>
		<filter token="target" value="dev"/>
		<filter token="debug" value="true"/>
		
		<copy todir="${dest}/Arstider-Documentation/sources" filtering="true">
			<fileset dir="${src}/sdk"></fileset>
		</copy>
		
		<echo> - running jsdoc...</echo>
		<exec executable="${jsdoc.home}/jsdoc">
			<arg line="--destination ${dest}/Arstider-Documentation" />
			<arg line="--recurse" />
			<arg line="--verbose" />
			<arg line="${dest}/Arstider-Documentation/sources" />
			
		</exec>
	</target>
</project>