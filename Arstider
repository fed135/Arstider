#!/bin/bash

###-------------------------------------// Variables

DESTINATION=""
CURRENT_DIR="$PWD"
LIBNAME="Arstider"

###-------------------------------------// Colors

BLUE_COLOR="\033[1;34m"
GREEN_COLOR="\033[1;32m"
RED_COLOR="\033[1;31m"
RESET="\e[0m"

###-------------------------------------// Functions

welcome () {
  DIR="$( cd "$( dirname "$0" )" && pwd )"
  cd $DIR

  if [ -z "$BUILD_DEST" ] ; then
    echo " initializing default build path:" $GREEN_COLOR"$PWD/dist"$RESET
    DESTINATION="$PWD/dist"
    change_dest $DESTINATION
  else
    DESTINATION="$BUILD_DEST"
  fi
}

#Compile function
compile () {
  if [ $# -eq 2 ] ; then
    change_dest $2
  fi
  ant $1
}

#Change build path
change_dest () {
  if [ $# -eq 1 ] ; then
    mkdir -p $1
    export BUILD_DEST=$1
  fi
  echo "$BUILD_DEST"
}

#Create a new project
create_project () {
  echo " "
  #create folder

  #get template zip

  #unzip in location

  #get libraries

  #cleanup
}

#Show version number function
version () {
  mapfile < version.properties
  echo -e "$BLUE_COLOR$LIBNAME ${MAPFILE[@]}$RESET"
}

#Show manual function
manual () {

  TAB="\t"
  PARTAB=$TAB$TAB$TAB$TAB
  BR=" "

  #Usage
  #...

  #Compile
  echo " -c|--compile     [opt]dest"
  echo -e $PARTAB"compiles the classes into the $LIBNAME.js and $LIBNAME.min.js"
  echo -e $PARTAB"at the specified location, or at the default loaction: "
  echo -e $PARTAB$DESTINATION
  echo $BR

  #Print/set destination path
  echo " -d|--dest        [opt]dest"
  echo -e $PARTAB"defines the path, if specified, prints the current one otherwise"
  echo $BR

  #Generate Documentation
  echo " -doc            [opt]dest"
  echo -e $PARTAB"compiles the project documentation (JSDoc) at the specified"
  echo -e $PARTAB"location or at the default location : "
  echo -e $PARTAB$DESTINATION
  echo $BR

  #Manual
  echo " -h|--help"
  echo -e $PARTAB"shows the available commands for this program"
  echo $BR

  #New project
  echo " -n|--new-project name [opt]dest"
  echo -e $PARTAB"fetches the arstider template project from github and initializes"
  echo -e $PARTAB"it at the specified location or at the default location :"  
  echo -e $PARTAB$DESTINATION
  echo $BR

  #Print Version
  echo " -v|--version"
  echo -e $PARTAB"displays the current engine version"
  echo $BR
}

#Error message
err_msg () {
  
  PRE="Error:"

  if [ $# -eq 0 ] ; then
    echo -e $RED_COLOR$PRE$RESET
  elif [ $# -eq 1 ] ; then
    echo -e $RED_COLOR$PRE$1$RESET
  elif [ $# -eq 2 ] ; then
    echo -e $RED_COLOR$PRE$1$RESET$2
  fi

  #show manual
  manual
}

#Goodbye message
goodbye () {
  echo -e $RESET
  cd $CURRENT_DIR
}

###-------------------------------------// Program

welcome

#Entry point
if [ $# -eq 0 ] ; then
  #No command
  err_msg "No command specified"
else
  #Detect command
  case "$1" in
  "-c" | "-compile")
    compile build.all "$2"
    ;;
  "-d" | "-dest")
    change_dest "$2"
    ;;
  "-doc")
    compile build.documentation "$2"
    ;;
  "-m" | "-man")
    manual
    ;;
  "-n" | "-new-project")
    create_project "$2" "$3"
    ;;
  "-v" | "-version")
    version
    ;;
  *)
    err_msg "Command not found " $1
  esac
fi

goodbye